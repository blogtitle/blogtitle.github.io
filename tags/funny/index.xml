<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>funny on Blog Title</title>
    <link>https://blogtitle.github.io/tags/funny/</link>
    <description>Recent content in funny on Blog Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Apr 2020 00:00:00 +0300</lastBuildDate>
    
	<atom:link href="https://blogtitle.github.io/tags/funny/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>I Am Switching to JS</title>
      <link>https://blogtitle.github.io/i-am-switching-to-js/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0300</pubDate>
      
      <guid>https://blogtitle.github.io/i-am-switching-to-js/</guid>
      <description>After 5 years of using Go I am finally moving on. Go has served me well and has been the best language I could have possibly used for the longest time, but it is now the moment for me to let it Go.
Over time Go has not failed to show me its limitations and its issues, to the point where I decided to switch to something more future proof and with a more thriving community.</description>
    </item>
    
    <item>
      <title>Regexp Fun</title>
      <link>https://blogtitle.github.io/regexp-fun/</link>
      <pubDate>Wed, 12 Sep 2018 19:57:02 +0200</pubDate>
      
      <guid>https://blogtitle.github.io/regexp-fun/</guid>
      <description>Preface I love using regular expressions. They are such a powerful tool, they are complex, concise, complex, expressive, complex, broadly supported, complex and easy to write.
They are the perfect tool if you want to write a simple script and you need to elaborate text. Some downsides are that they are complex, surprising, and very inefficient compared with simpler string manipulations primitives (e.g contains, hasPrefix, trim, replace,&amp;hellip;)
Regular The &amp;ldquo;reg&amp;rdquo; in &amp;ldquo;regexp&amp;rdquo; stands for regular.</description>
    </item>
    
    <item>
      <title>Let&#39;s talk about JavaScript</title>
      <link>https://blogtitle.github.io/lets-talk-about-javascript/</link>
      <pubDate>Sat, 11 Aug 2018 19:20:13 +0200</pubDate>
      
      <guid>https://blogtitle.github.io/lets-talk-about-javascript/</guid>
      <description>Short preface: The first version of JavaScript was completed in ten days in order to accommodate the Netscape Navigator 2.0 Beta release schedule.
Keep in mind that well structured languages usually take a little bit more than that.
What follows is a small piece of the aftermath of the rushed job.
NOTE: There is more madness in destroy all software&amp;rsquo;s wat video, which I suggest watching before reading this post.</description>
    </item>
    
    <item>
      <title>Considerations on error handling</title>
      <link>https://blogtitle.github.io/considerations-on-error-handling/</link>
      <pubDate>Fri, 10 Aug 2018 12:34:41 +0200</pubDate>
      
      <guid>https://blogtitle.github.io/considerations-on-error-handling/</guid>
      <description>The impact The first language I used to build something more than just school exercises was VisualBasic.Net. There are some good things and bad things in it, but I don&amp;rsquo;t want to discuss that today. I switched to C# after that and Java and Python after it.
This is to say that basically up until three years ago I knew one and only one way to handle errors which is expressed in the following pseudocode:</description>
    </item>
    
  </channel>
</rss>