<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on Blog Title</title>
    <link>https://blogtitle.github.io/tags/security/</link>
    <description>Recent content in security on Blog Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Sep 2019 23:23:40 +0200</lastBuildDate>
    
	<atom:link href="https://blogtitle.github.io/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rob&#39;n Go security pearls: Cross Site Scripting (XSS)</title>
      <link>https://blogtitle.github.io/robn-go-security-pearls-cross-site-scripting-xss/</link>
      <pubDate>Wed, 11 Sep 2019 23:23:40 +0200</pubDate>
      
      <guid>https://blogtitle.github.io/robn-go-security-pearls-cross-site-scripting-xss/</guid>
      <description>This post is part of my developer-friendly security series. You can find all other posts here.
 XSS is a vulnerability that allows attackers to run arbitrary JavaScript code in applications they shouldn&amp;rsquo;t be able to control. This can lead to complete account compromises for every victim that follows a malicious link or visits a compromised page.
There are two major families of XSS: server side and client side.</description>
    </item>
    
    <item>
      <title>Rob&#39;n Go security pearls: fundamentals</title>
      <link>https://blogtitle.github.io/robn-go-security-pearls-fundamentals/</link>
      <pubDate>Thu, 05 Sep 2019 12:25:40 +0200</pubDate>
      
      <guid>https://blogtitle.github.io/robn-go-security-pearls-fundamentals/</guid>
      <description>Welcome to this introductory series on web security. I&amp;rsquo;ll use simple snippets and hands-on examples to introduce fundamentals on the topic. Most server-side code will be in Go but you&amp;rsquo;ll be able to understand it if you know any C-like language.
This first post is about the fundamentals: URI, HTTP, TLS, HTML, escaping and cookies. If you are already familiar with those concepts please feel free to skip to the next post.</description>
    </item>
    
  </channel>
</rss>